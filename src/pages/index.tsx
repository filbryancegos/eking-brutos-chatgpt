import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useState } from "react";
import type { NextPage } from "next";
import { AnimatePresence } from "framer-motion";
import ThreeDotsLoader from "../icons/ThreeDotsLoader";
import FormField from '../components/FormField';
import ChatBox from '../components/ChatBox';
import { useToast } from '@chakra-ui/react'

type Chat = {
  user: "me" | "gpt";
  message: string;
  originalIndex: number;
};

 const Home: NextPage = () => {
  const [value, setValue] = useState("");
  const [isSubmit, setIsSubmit] = useState(false);
  const [chats, setChats] = useState<Chat[]>([]);
  const toast = useToast()

  const handleSubmit = async (e: React.MouseEvent<HTMLElement>) => {
    e.preventDefault();

    if(!value) {
      return;
    }
    
    try {
      setIsSubmit(true);
      setValue("");
      setChats((prev) => [
        { user: "me", message: value, originalIndex: prev.length },
        ...prev,
      ]);
   
      const res = await fetch("/api/ekingbrutos", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          message: [{ user: "me", message: value }, ...chats]
            .reverse()
            .map((d) => d.message)
            .join(""),
        }),
      });

      const data = await res.json();
      if (res.status !== 200) {
        throw (
          data.error ||
          new Error(`Request failed with status ${res.status}`)
        );
      }

      setChats((prev) => [
        { user: "gpt", message: data.result, originalIndex: prev.length },
        ...prev,
      ]);
      console.log(chats);
    } catch (error) {
      console.log(error);
    } finally {
      setIsSubmit(false);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className=' w-100 md:w-3/6'>
          <h1 className='text-white text-3xl font-bold text-uppercase uppercase text-center pb-4'>
            welcome to egos <span className='text-pink-400'>chatgpt</span>
          </h1>
          <div className='bg-gray-900 w-100 pb-2'
            style={{
              padding: '1rem 1rem',
              borderRadius: '0 20px 20px 20px',
              minHeight: '71vh',
              display: 'flex',
              flexDirection: 'column',
              justifyContent: 'flex-end',
            }}
          >
          <div className='flex items-start flex-col-reverse overflow-y-auto gap-2 mb-4'>
            { isSubmit && 
              <div>
                <ThreeDotsLoader/>
              </div>
            }
            <AnimatePresence>
            {chats.map((chat, index) => {
              return (
                <ChatBox
                  key={chat.originalIndex}
                  message={chat.message}
                  user={chat.user}
              />
              );
            })}
            
            </AnimatePresence>
          
          </div>
            <FormField 
              onSubmit={handleSubmit!}
              inputProps={{
                onChange: (e) => setValue(e.target.value),
                autoFocus: true,
                value,
              }}
             />
          </div>
        </div>
      </main>
    </>
  )
}
export default Home;